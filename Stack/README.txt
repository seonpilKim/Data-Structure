[Stack, 스택]

# 개념 : 한 쪽 끝에서만 자료를 넣거나 뺄 수 있는 선형 구조 (LIFO - Last In First Out)

# 연산 : 
 - pop() : 스택의 가장 위에있는 원소를 제거한다.
 - push(element) : 스택의 가장 위에 원소를 추가한다. 
 - top() : 스택의 가장 위에있는 원소를 반환한다.
 - empty() : 스택이 비어있는 경우 참, 그렇지 않은경우 거짓을 반환한다.
 - size() : 스택에 존재하는 원소의 개수를 반환한다.

# 구현 : 연결리스트(Linked-List) 혹은 배열(Array)으로 구현할 수 있다.

# 시간복잡도 :
 - 삽입 : O(1)
 - 삭제 : O(1)
 - 탐색(top) : O(1)

# 사용 용도
 - 재귀 알고리즘
   > 재귀적으로 함수를 호출해야 하는 경우에 임시 데이터를 스택에 넣어준다.
   > 재귀함수를 빠져 나와 퇴각 검색(backtrack)을 할 때는 스택에 넣어 두었던 임시 데이터를 빼 줘야 한다.
   > 스택은 이런 일련의 행위를 직관적으로 가능하게 해 준다.
   > 또한 스택은 재귀 알고리즘을 반복적 형태(iterative)를 통해서 구현할 수 있게 해준다.
 - 웹 브라우저 방문기록 (뒤로가기)
 - 실행 취소 (undo)
 - 역순 문자열 만들기
 - 수식의 괄호 검사 (연산자 우선순위 표현을 위한 괄호 검사)
    Ex) 올바른 괄호 문자열(VPS, Valid Parenthesis String) 판단하기
 - 후위 표기법 계산